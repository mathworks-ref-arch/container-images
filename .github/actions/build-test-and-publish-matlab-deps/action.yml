# Copyright 2025 The MathWorks, Inc.

name: Build Test and Publish a Matlab-Deps Image
description: This action builds, tests, and publishes a MATLAB-Deps Docker image to DockerHub.

inputs:
  docker_build_context:
    description: "Relative path to folder with Dockerfile. Ex: ./matlab-deps/r2023a/ubuntu24.04"
    required: true
  image_name:
    description: "Name of image, without tag. Example: mathworks/matlab-deps"
    required: true
  matlab_release_tag:
    description: "Name of the MATLAB release. Example: r2023a"
    required: true
  os_info_tag:
    description: "Allowed values: aws-batch, ubi8, ubi9, ubuntu22.04, ubuntu24.04"
    required: true
  is_default_os:
    description: "Specify whether the OS being tagged is desired default OS. For example, This field is used to configure that matlab-deps/r2023a should point to matlab-deps/r2023a-ubuntu24.04"
    required: true
  should_add_latest_tag:
    description: "Specify if this image should also be tagged as latest"
    required: true
  test_file_path:
    description: "Relative path to the root directory. Ex: ./tests/matlab-deps/test_ubuntu2204.py"
    required: false

runs:
  using: "composite"
  steps:
    # Invalid combination would error out.
    - name: Invalid combination of should_add_latest_tag set to true and is_default_os set to false
      if: ${{ inputs.should_add_latest_tag == 'true' && inputs.is_default_os == 'false' }}
      shell: bash
      run: |
        echo "Invalid situation detected. A workflow marked as latest must also set the default os to be true. "
        exit 1

    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Image Tags
      id: setup_image_tags
      shell: bash
      run: |
        RAW_MATLAB_RELEASE=${{ inputs.matlab_release_tag }} \
        && LOWER_CASE_MATLAB_RELEASE=${RAW_MATLAB_RELEASE,,} \
        && echo "TAG_RELEASE_ONLY_CAMEL_CASE=${LOWER_CASE_MATLAB_RELEASE}" >> "${GITHUB_OUTPUT}" \
        && echo "TAG_RELEASE_ONLY_PASCAL_CASE=${LOWER_CASE_MATLAB_RELEASE^}" >> "${GITHUB_OUTPUT}" \
        && echo "TAG_RELEASE_AND_OS_CAMEL_CASE=${LOWER_CASE_MATLAB_RELEASE}-${{ inputs.os_info_tag }}" >> "${GITHUB_OUTPUT}" \
        && echo "TAG_RELEASE_AND_OS_PASCAL_CASE=${LOWER_CASE_MATLAB_RELEASE^}-${{ inputs.os_info_tag }}" >> "${GITHUB_OUTPUT}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Example tags: r2023a-ubuntu24.04, R2023a-ubuntu24.04
    - name: Build Image
      if: ${{ inputs.should_add_latest_tag == 'false' && inputs.is_default_os == 'false' }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker_build_context }}
        platforms: linux/amd64
        load: true
        tags: |
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_CAMEL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_PASCAL_CASE }}

    # Example tags: r2023a-ubuntu24.04, R2023a-ubuntu24.04, r2023a, R2023a
    - name: Build Image for latest OS
      if: ${{ inputs.should_add_latest_tag == 'false' && inputs.is_default_os == 'true' }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker_build_context }}
        platforms: linux/amd64
        load: true
        tags: |
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_ONLY_CAMEL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_ONLY_PASCAL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_CAMEL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_PASCAL_CASE }}

    # Example tags: r2023a-ubuntu24.04, R2023a-ubuntu24.04, r2023a, R2023a, latest
    - name: Build Image with latest Tag for latest OS
      if: ${{ inputs.should_add_latest_tag == 'true' && inputs.is_default_os == 'true' }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker_build_context }}
        platforms: linux/amd64
        load: true
        tags: |
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_ONLY_CAMEL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_ONLY_PASCAL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_CAMEL_CASE }}
          ${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_PASCAL_CASE }}
          ${{ inputs.image_name }}:latest

    - name: Should Run Tests
      id: run_tests
      shell: bash
      run: |
        if [ -n "${{ inputs.test_file_path }}" ]; then
          echo "should_run=true" >> $GITHUB_OUTPUT
        else
          echo "should_run=false" >> $GITHUB_OUTPUT
        fi

    - name: Set up Python 3
      if: ${{ steps.run_tests.outputs.should_run == 'true' }}
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install test dependencies
      if: ${{ steps.run_tests.outputs.should_run == 'true' }}
      shell: bash
      working-directory: tests
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get test relative path
      id: get_test_path
      if: ${{ steps.run_tests.outputs.should_run == 'true' }}
      shell: bash
      run: |
        TESTDIR=tests
        echo "testdir=${TESTDIR}" >> $GITHUB_OUTPUT
        echo "relpath=$(realpath --relative-to=${TESTDIR} ${{ inputs.test_file_path }})" >> $GITHUB_OUTPUT

    - name: Test container
      if: ${{ steps.run_tests.outputs.should_run == 'true' }}
      shell: bash
      env:
        IMAGE_NAME: "${{ inputs.image_name }}:${{ steps.setup_image_tags.outputs.TAG_RELEASE_AND_OS_CAMEL_CASE }}"
      working-directory: ${{ steps.get_test_path.outputs.testdir }}
      run: python -m unittest -v ${{ steps.get_test_path.outputs.relpath }}

    - name: Push Image
      shell: bash
      run: docker push --all-tags ${{ inputs.image_name }}
